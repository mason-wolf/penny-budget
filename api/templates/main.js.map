{"version":3,"sources":["./src/app/manage-budget/manage-budget.component.ts","./src/app/manage-budget/manage-budget.component.html","./src/app/shared/models/transaction.model.ts","./src/environments/environment.ts","./src/app/shared/auth.guard.ts","./src/app/account-activity/account-activity.component.ts","./src/app/account-activity/account-activity.component.html","./src/app/services/budget.service.ts","./src/app/dashboard/dashboard.component.ts","./src/app/dashboard/dashboard.component.html","./src/app/shared/models/category.model.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/shared/auth.interceptor.ts","./src/app/shared/models/budget.model.ts","./src/app/header/header.component.ts","./src/app/header/header.component.html","./src/app/services/account.service.ts","./src/app/budget-history/budget-history.component.ts","./src/app/budget-history/budget-history.component.html","./src/app/shared/material/material.module.ts","./src/app/services/auth.service.ts","./src/app/app-routing.module.ts","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit, TemplateRef, ViewChild } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { BudgetService } from '../services/budget.service';\nimport { Budget } from '../shared/models/budget.model';\nimport { Category } from '../shared/models/category.model';\nimport { Transaction } from '../shared/models/transaction.model';\n\n@Component({\n  selector: 'app-manage-budget',\n  templateUrl: './manage-budget.component.html',\n  styleUrls: ['./manage-budget.component.css']\n})\nexport class ManageBudgetComponent implements OnInit {\n\n  budgetItems: Budget[] = [];\n  currentUser: string;\n  date = new Date();\n  month: number;\n  year: number;\n\n  totalBudget;\n  monthlyIncome;\n  errorMessage;\n\n  categories : Category[] = [];\n  budgetAmount: number;\n  budgetCategory: string;\n  categoryToRemove: Category;\n\n  @ViewChild('setIncomeDialog') setIncomeDialog: TemplateRef<any>;\n  @ViewChild('addBudgetDialog') addBudgetDialog: TemplateRef<any>;\n  @ViewChild('manageCategoryDialog') manageCategoryDialog: TemplateRef<any>;\n\n  constructor(private budgetService: BudgetService, private dialog: MatDialog, private snackBar: MatSnackBar) {\n    this.month = this.date.getMonth() + 1;\n    this.year = this.date.getFullYear();\n    this.currentUser = sessionStorage.getItem(\"username\");\n    this.getBudget();\n    this.getCategories();\n    this.getTotalBudget();\n    this.monthlyIncome = localStorage.getItem(\"monthlyIncome\");\n  }\n\n  getBudget() {\n    this.budgetItems = [];\n    this.budgetService.getBudgetByCategory(this.currentUser, this.month, this.year).subscribe(data => {\n      Object.keys(data).forEach((key) => {\n        let budget = new Budget();\n        budget.id = data[key].id;\n        budget.amount = data[key].amount;\n        budget.category = data[key].category;\n        this.budgetItems.push(budget);\n      })\n    })\n  }\n\n  getCategories() {\n    this.categories = [];\n    this.budgetService.getBudgetCategories(this.currentUser).subscribe(data => {\n      Object.keys(data).forEach((key) => {\n        let category = new Category();\n        category.id = data[key].id;\n        category.owner = data[key].owner;\n        category.title = data[key].title;\n        this.categories.push(category);\n      })\n    })\n  }\n\n  getTotalBudget() {\n    this.budgetService.getTotalBudget(this.currentUser).subscribe(value => {\n      this.totalBudget = value[\"amount\"];\n    })\n  }\n\n  showBudgetDialog() {\n    this.dialog.open(this.addBudgetDialog, {\n      minWidth: '30%',\n      maxWidth: '100%'\n    })\n  }\n\n  addBudgetItem() {\n    let validator: RegExp = /^[0-9].*$/;\n\n    if (this.budgetAmount != null && validator.test(this.budgetAmount.toString()) && this.budgetCategory != null) {\n      let budgetItem = new Transaction();\n      budgetItem.owner = this.currentUser;\n      budgetItem.category = this.budgetCategory;\n      budgetItem.amount = this.budgetAmount;\n      this.budgetService.addBudget(budgetItem).subscribe(resp => {\n        console.log(resp);\n        this.dialog.closeAll();\n      })\n\n      this.getBudget();\n      this.getTotalBudget();\n    }\n  }\n\n  deleteBudgetItem(budgetItem) {\n    this.budgetService.deleteBudget(budgetItem.id).subscribe(resp => {\n      this.getBudget();\n      this.getTotalBudget();\n    })\n  }\n\n  updateIncome() {\n    let valid = false;\n    let validator: RegExp = /^[0-9].*$/;\n\n    if (this.monthlyIncome != null && validator.test(this.monthlyIncome.toString())) {\n      valid = true;\n      this.dialog.closeAll();\n      localStorage.setItem(\"monthlyIncome\", this.monthlyIncome.toString());\n    }\n    return valid;\n  }\n\n  showIncomeDialog() {\n    this.dialog.open(this.setIncomeDialog, {\n      minWidth: '30%',\n      maxWidth: '100%'\n    })\n\n    this.monthlyIncome = null;\n  }\n\n  calculateSavings(monthlyIncome, totalBudget) {\n    let savings = monthlyIncome - totalBudget;\n    return savings;\n  }\n\n  showCategoryDialog() {\n    this.dialog.open(this.manageCategoryDialog, {\n      minWidth: '40%',\n      maxWidth: '100%'\n    })\n  }\n\n  addCategory() {\n    if (this.budgetCategory== undefined) {\n      this.errorMessage = \"Please enter a category name.\";\n    }\n    else {\n      this.errorMessage = null;\n      console.log(this.budgetCategory)\n      this.budgetService.addCategory(this.currentUser, this.budgetCategory).subscribe(resp => {\n        this.snackBar.open(\"Category added!\", \"OK\", {\"duration\" : 2000});\n        this.getCategories();\n      })\n      this.budgetCategory = undefined;\n    }\n  }\n\n  deleteCategory() {\n    if (this.categoryToRemove != undefined) {\n      this.budgetService.deleteCategory(this.categoryToRemove.id).subscribe(resp => {\n        this.snackBar.open(\"Category removed.\", \"OK\", {\"duration\" : 2000});\n        this.getCategories();\n        this.categoryToRemove = undefined;\n      })\n    }\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"container-fluid\">\n    <div class=\"row justify-content-center\">\n        <div class=\"col-10 m-5\">\n            <nav aria-label=\"breadcrumb\" style=\"margin-top:-25px;margin-left:-15px;\">\n                <ol class=\"breadcrumb\" style=\"background-color: white;\">\n                  <li class=\"breadcrumb-item\"><a href=\"dashboard\">Dashboard</a></li>\n                  <li class=\"breadcrumb-item active\" aria-current=\"page\">Manage Budget</li>\n                </ol>\n              </nav>\n            <h1>Manage Budget</h1>\n            <button (click)=\"showBudgetDialog()\">Add Budget</button>\n            <table class=\"budgetTable\" style=\"margin-top:50px;\">\n              <th>Category</th>\n              <th style=\"border-right:none;\">Projected</th>\n              <tr *ngFor=\"let budget of budgetItems\">\n                <td>{{ budget.category }}</td>\n                <td style=\"border-right:none;\">{{ budget.amount | currency}}</td>\n                <td style=\"text-align:center;border-left: none;\"><a [routerLink]=\"\" (click)=\"deleteBudgetItem(budget)\">Remove</a></td>\n              </tr>\n              <tr>\n                <th>Monthly Income</th>\n                <td style=\"border-right: none;\">\n                  {{ monthlyIncome | currency }}\n                </td>\n                <td style=\"text-align: center;border-left: none;\">\n                    <a [routerLink]=\"\"(click)=\"showIncomeDialog()\">Update</a>\n                </td>\n              </tr>\n              <tr>\n                <th>Total Budget</th>\n                <td style=\"border-right: none;\">{{ totalBudget | currency }}</td>\n                <td style=\"border-left: none;\"></td>\n              </tr>\n              <tr>\n                <th>Projected Savings</th>\n                <td style=\"border-right: none;\">{{ calculateSavings(monthlyIncome, totalBudget) | currency}}</td>\n                <td style=\"border-left: none;\"></td>\n              </tr>\n            </table>\n        </div>\n    </div>\n</div>\n\n<!-- Add budget dialog -->\n<ng-template #addBudgetDialog>\n  <mat-dialog-actions align=\"end\">\n      <i class=\"fa fa-window-close\" mat-button matDialogClose=\"yes\" style=\"font-size:32px;\"></i>\n  </mat-dialog-actions>\n  <h2 style=\"margin-top:-50px;\">Add Budget</h2>\n  <div class=\"container-fluid justify-content-center\">\n      <form>\n          <div class=\"col-12\" style=\"margin-top:15px;\">\n              Amount:\n          </div>\n          <div class=\"col-12\">\n              <input type=\"text\" [(ngModel)]=\"budgetAmount\" name=\"budgetAmount\">\n              <span style=\"color:red;width:50px;\"> {{ errorMessage }} </span><br>\n          </div>\n          <div class=\"col-12 mt-3\">\n            Category:\n        </div>\n        <div class=\"col-12\">\n            <select [(ngModel)]=\"budgetCategory\" name=\"budgetCategory\">\n                <option *ngFor=\"let category of categories\" [ngValue]=\"category\"> {{ category.title }} </option>\n            </select>\n            <a [routerLink]=\"\" (click)=\"showCategoryDialog()\">Manage Categories</a>\n            <button style=\"float:right;margin-top:5px;\" (click)=\"addBudgetItem()\">Add</button>\n        </div>\n      </form>\n  </div>\n</ng-template>\n\n<!-- Set Income dialog -->\n<ng-template #setIncomeDialog>\n  <mat-dialog-actions align=\"end\">\n      <i class=\"fa fa-window-close\" mat-button matDialogClose=\"yes\" style=\"font-size:32px;\"></i>\n  </mat-dialog-actions>\n  <h2>Monthly Income</h2>\n  <div class=\"container-fluid justify-content-center\">\n      <form>\n          <div class=\"col-12\" style=\"margin-top:15px;\">\n              Amount:\n          </div>\n          <div class=\"col-12\">\n              <input type=\"text\" [(ngModel)]=\"monthlyIncome\" name=\"monthlyIncome\">\n              <span style=\"color:red;width:50px;\"> {{ errorMessage }} </span><br>\n              <button style=\"float:right;margin-top:5px;\" (click)=\"updateIncome()\">Update</button>\n          </div>\n      </form>\n  </div>\n</ng-template>\n\n<!-- Manage Categories dialog -->\n<ng-template #manageCategoryDialog>\n  <mat-dialog-actions align=\"end\">\n      <i class=\"fa fa-window-close\" mat-button matDialogClose=\"yes\" style=\"font-size:32px;\"></i>\n  </mat-dialog-actions>\n  <h2 style=\"margin-top:-50px;\">Manage Categories</h2>\n  <div class=\"container-fluid justify-content-center\">\n      <form>\n          <div class=\"col-12\" style=\"margin-top:25px;\">\n              Category Name:\n          </div>\n          <div class=\"col-12\">\n              <input type=\"text\" [(ngModel)]=\"budgetCategory\" name=\"budgetCategory\">\n              <span style=\"color:red;\"> {{ errorMessage }} </span>\n              <button style=\"float:right;margin-top:5px;\" (click)=\"addCategory()\">Add</button>\n          </div>\n          <div class=\"col-12\" style=\"margin-top:25px;\">\n              Categories:\n          </div>\n          <div class=\"col-12\">\n              <select name=\"budgetCategory\" [(ngModel)]=\"categoryToRemove\">\n                  <option *ngFor=\"let category of categories\" [ngValue]=\"category\" >{{ category.title }}</option>\n              </select>\n          </div>\n          <div class=\"col-12\">\n              <button style=\"float:right;\" (click)=\"deleteCategory()\" style=\"margin-top:5px;\">Remove</button>\n          </div>\n      </form>\n  </div>\n</ng-template>","export class Transaction {\r\n    id: number;\r\n    owner: string;\r\n    archived: number;\r\n    date: string;\r\n    amount: number;\r\n    category: string;\r\n    account: string;\r\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiEndpoint: 'http://localhost:80'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Injectable } from '@angular/core';\nimport { CanActivate, RouterStateSnapshot, Router, ActivatedRouteSnapshot } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthService } from '../services/auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate{\n\n  constructor(\n    public authService: AuthService,\n    public router: Router\n  ) { }\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\n    if (this.authService.isLoggedIn !== true) {\n      this.router.navigate([''])\n    }\n    return true;\n  }\n\n}\n","import { ThrowStmt } from '@angular/compiler';\nimport { Component, OnInit, TemplateRef, ViewChild } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { AccountService } from '../services/account.service';\nimport { Transaction } from '../shared/models/transaction.model';\n\n@Component({\n  selector: 'app-account-activity',\n  templateUrl: './account-activity.component.html',\n  styleUrls: ['./account-activity.component.css']\n})\nexport class AccountActivityComponent implements OnInit {\n\n  currentUser: string;\n\n  dataSource = new MatTableDataSource();\n  displayedColumns : string[] = [\"date\", \"category\", \"amount\", \"deleteAction\"]\n  transactions : Transaction[] = []\n\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild('addIncomeDialog') addIncomeDialog: TemplateRef<any>;\n\n  constructor(private accountService: AccountService, private dialog: MatDialog) {\n    this.currentUser = sessionStorage.getItem(\"username\");\n    this.getTransactionHistory();\n   }\n\n  getTransactionHistory() {\n    this.accountService.getTransactionHistory(this.currentUser).subscribe(data => {\n      Object.keys(data).forEach((key) => {\n        this.transactions.push(data[key])\n      })\n\n      this.dataSource.data = this.transactions;\n      this.dataSource.paginator = this.paginator;\n    })\n  }\n\n  showIncomeDialog() {\n    let incomeDialog = this.dialog.open(this.addIncomeDialog, {\n      width: '40%'\n    });\n  }\n\n  deleteTransaction(transaction) {\n    this.accountService.deleteTransaction(transaction).subscribe(resp => {\n      this.transactions = [];\n      this.getTransactionHistory();\n    })\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n\n","<div class=\"container-fluid\">\n    <div class=\"row justify-content-center\">\n        <div class=\"col-10 m-5\">\n            <nav aria-label=\"breadcrumb\" style=\"margin-top:-25px;margin-left:-15px;\">\n                <ol class=\"breadcrumb\" style=\"background-color: white;\">\n                  <li class=\"breadcrumb-item\"><a href=\"dashboard\">Dashboard</a></li>\n                  <li class=\"breadcrumb-item active\" aria-current=\"page\">Account Activity</li>\n                </ol>\n              </nav>\n            <h1>Account Activity</h1>\n            <table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z0 m-1 activity\" style=\"width:100%;\">\n                <ng-container matColumnDef=\"date\">\n                    <th mat-header-cell *matHeaderCellDef>Date</th>\n                    <td mat-cell *matCellDef=\"let transaction\"> {{ transaction.date }} </td>\n                </ng-container>\n                <ng-container matColumnDef=\"category\">\n                    <th mat-header-cell *matHeaderCellDef>Category</th>\n                    <td mat-cell *matCellDef=\"let transaction\"> {{ transaction.category }} </td>\n                </ng-container>\n                <ng-container matColumnDef=\"amount\">\n                    <th mat-header-cell *matHeaderCellDef>Amount</th>\n                    <td mat-cell *matCellDef=\"let transaction\"> {{ transaction.amount | currency }} </td>\n                </ng-container>\n                <ng-container matColumnDef=\"deleteAction\">\n                    <th mat-header-cell *matHeaderCellDef></th>\n                    <td mat-cell *matCellDef=\"let transaction\"> <a [routerLink]=\"\" (click)=\"deleteTransaction(transaction)\">Delete</a></td>\n                </ng-container>\n                <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n                <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n            </table>\n            <mat-paginator [pageSizeOptions]=\"[10, 25, 50]\"style=\"margin-top:25px;\"></mat-paginator>\n        </div>\n    </div>\n</div>","import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { Transaction } from '../shared/models/transaction.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BudgetService {\n\n  headers = new HttpHeaders().set('Content-Type', 'application-json');\n  \n  constructor(private httpClient: HttpClient) { }\n\n  addBudget(budgetItem: Transaction) {\n    return this.httpClient.post(environment.apiEndpoint + '/addBudget', {budgetItem})\n  }\n\n  getBudgetByCategory(username: string, month: number, year: number) {\n    return this.httpClient.post(environment.apiEndpoint + '/getBudgetByCategory', { \"username\" : username, \"month\" : month, \"year\" : year });\n  }\n\n  getBudgetHistory(username: string) {\n    return this.httpClient.post(environment.apiEndpoint + '/getBudgetHistory', { \"username\": username });\n  }\n\n  getRemainingBalance(username: string, month: number, year: number) {\n    return this.httpClient.post(environment.apiEndpoint + '/getRemainingBalance', { \"username\" : username, \"month\" : month, \"year\" : year });\n  }\n\n  getBudgetArchive(username: string, month: number, year: number) {\n    return this.httpClient.post(environment.apiEndpoint + '/getBudgetArchive', { \"username\" : username, \"month\" : month, \"year\" : year });\n  }\n\n  getBudgetCategories(username: string) {\n    return this.httpClient.post(environment.apiEndpoint + \"/getBudgetCategories\", { \"username\" : username })\n  }\n\n  getTotalBudget(username: string) {\n    return this.httpClient.post(environment.apiEndpoint + \"/getTotalBudget\", { \"username\" : username })\n  }\n\n  addCategory(username: string, title: string) {\n    return this.httpClient.post(environment.apiEndpoint + \"/addCategory\", { \"username\": username, \"title\": title })\n  }\n\n  deleteCategory(categoryId: number) {\n    const options = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n      }),\n      body: {\n        categoryId: categoryId\n      }\n    }\n    return this.httpClient.delete(environment.apiEndpoint + '/deleteCategory', options);\n  }\n\n  deleteBudget(budgetId: number) {\n    const options = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n      }),\n      body: {\n        budgetId: budgetId\n      }\n    }\n    return this.httpClient.delete(environment.apiEndpoint + '/deleteBudget', options);\n  }\n}\n","import { formatCurrency, formatDate } from '@angular/common';\nimport { Component, OnInit, TemplateRef, ViewChild } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { Router } from '@angular/router';\nimport { AccountService } from '../services/account.service';\nimport { BudgetService } from '../services/budget.service';\nimport { Budget } from '../shared/models/budget.model';\nimport { Category } from '../shared/models/category.model';\nimport { Transaction } from '../shared/models/transaction.model';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n\n  currentUser: string;\n  balance: string;\n  accountName: string;\n  amountEarned: string;\n  amountSpent: string;\n  date = new Date();\n  month: number;\n  year: number;\n  transactions: Transaction[] = [];\n  budgetItems: Budget[] = [];\n  errorMessage: string;\n\n  // Income form fields\n  incomeAmount: number;\n  incomeDate: string;\n  incomeForm: FormGroup;\n\n  // Transaction form fields\n  transactionAmount: number;\n  transactionDate: string;\n  transactionCategory: Category;\n  transactionForm: FormGroup;\n\n  // Category form fields\n  categoryName: string;\n  categoryToRemove: Category;\n  categories : Category[] = [];\n\n  budgetHistory : any[] = [];\n  selectedArchive : any;\n\n  @ViewChild('addIncomeDialog') addIncomeDialog: TemplateRef<any>;\n  @ViewChild('addTransactionDialog') addTransactionDialog: TemplateRef<any>;\n  @ViewChild('manageCategoryDialog') manageCategoryDialog: TemplateRef<any>;\n\n  constructor(\n    private budgetService: BudgetService, \n    private accountService: AccountService, \n    private dialog: MatDialog,\n    private snackBar: MatSnackBar,\n    private router: Router) {\n\n    this.month = this.date.getMonth() + 1;\n    this.year = this.date.getFullYear();\n    this.currentUser = sessionStorage.getItem(\"username\");\n\n    // Add income form.\n    this.incomeForm = new FormGroup({\n      \"incomeAmount\" : new FormControl(this.incomeAmount, [\n        Validators.required,\n        Validators.pattern(\"^[0-9].*$\")\n      ]),\n      \"incomeDate\": new FormControl(this.incomeDate)\n    }\n    );\n\n    // Add transaction form.\n    this.transactionForm = new FormGroup({\n      \"transactionAmount\" : new FormControl(this.transactionAmount, [\n        Validators.required, \n        Validators.pattern(\"^[0-9].*$\")\n      ]),\n      \"transactionCategory\": new FormControl(this.transactionCategory, [\n        Validators.required\n      ]),\n      \"transactionDate\": new FormControl(this.transactionDate)\n    });\n\n    this.getAccount();\n    this.getIncome();\n    this.getBudget();\n    this.getSpent();\n    this.getCategories();\n    this.getBudgetHistory();\n  }\n\n  // Get account balance and account name.\n  getAccount() {\n    this.accountService.getAccount(this.currentUser).subscribe(resp => {\n\n      this.balance = formatCurrency(resp[\"balance\"] as number, 'en', '$');\n      this.accountName = resp[\"accountName\"];\n      let budgetStartDate = resp[\"budgetStartDate\"];\n\n      if (this.monthLapsed(new Date(budgetStartDate))) {\n        this.accountService.archiveAccount(this.currentUser).subscribe(value => {\n          console.log(value);\n        });\n      }\n    })\n  }\n\n  // Get income earned this month.\n  getIncome() {\n    this.accountService.getAmountEarned(this.currentUser, this.month, this.year).subscribe(resp => {\n      this.amountEarned = formatCurrency(resp as number, 'en', '$');\n    })\n  }\n\n  getSpent() {\n    this.transactions = [];\n    this.accountService.getTotalSpentByCategory(this.currentUser, this.month, this.year).subscribe(data => {\n      let totalSpent = 0;\n      if (data == 0) {\n        this.amountSpent = \"$0.00\";\n        // If nothing was spent this month, create template transactions by \n        // category from last month and rollover to this month.\n        this.budgetItems.forEach(budgetItem => {\n          let template = new Transaction();\n          template.category = budgetItem[\"category\"];\n          template.amount = 0;\n          this.transactions.push(template);\n        });\n      }\n      else {\n        this.transactions = [];\n        // Get all transactions by category and calculate total spent.  \n        Object.keys(data).forEach((key) => {\n          let transaction = new Transaction();\n          transaction.id = data[key].id;\n          transaction.owner = data[key].owner;\n          transaction.amount = data[key].amount;\n          transaction.archived = data[key].archived;\n          transaction.date = data[key].date;\n          transaction.category = data[key].category;\n          transaction.account = data[key].account;\n          this.transactions.push(transaction);\n          totalSpent += transaction.amount;\n        })\n\n        // We want to show budget items even if nothing was spent this month\n        // in each category.\n        let budgetTemplates = [];\n        this.budgetItems.forEach(budgetItem => {\n          let template = new Transaction();\n          template.category = budgetItem.category;\n          template.amount = 0;\n          if (!this.transactions.find(e => e.category === template.category)) {\n            budgetTemplates.push(template);\n          }\n        });\n\n        budgetTemplates.forEach(budgetTemplate => {\n          this.transactions.push(budgetTemplate);\n        });\n        // Format total spent.\n        this.amountSpent = formatCurrency(totalSpent, 'en', '$');\n      }\n    })\n  }\n\n  getBudget() {\n    this.budgetItems = [];\n    this.budgetService.getBudgetByCategory(this.currentUser, this.month, this.year).subscribe(data => {\n      Object.keys(data).forEach((key) => {\n        let budget = new Budget();\n        budget.amount = data[key].amount;\n        budget.category = data[key].category;\n        this.budgetItems.push(budget);\n      })\n    })\n  }\n  \n  viewSelectedArchive() {\n    if (this.selectedArchive != null) {\n      let date = new Date(this.selectedArchive);\n      let month = formatDate(date, 'MM', 'en-us');\n      let year = formatDate(date, 'YYYY', 'en-us');\n      this.router.navigate(['/budget-history/', month, year])\n    }\n  }\n\n  getBudgetHistory() {\n    this.budgetService.getBudgetHistory(this.currentUser).subscribe(data => {\n      Object.keys(data).forEach((key) => {\n        let date = new Date(data[key].year, data[key].month, 0, 1);\n        this.budgetHistory.push(date);\n      })\n    })\n  }\n\n  getCategories() {\n    this.categories = [];\n    this.budgetService.getBudgetCategories(this.currentUser).subscribe(data => {\n      Object.keys(data).forEach((key) => {\n        let category = new Category();\n        category.id = data[key].id;\n        category.owner = data[key].owner;\n        category.title = data[key].title;\n        this.categories.push(category);\n      })\n    })\n  }\n\n  showIncomeDialog() {\n    this.dialog.open(this.addIncomeDialog, {\n      minWidth: '30%',\n      maxWidth: '100%'\n    })\n  }\n\n  addIncome() {\n    if (this.incomeForm.get('incomeAmount').invalid) {\n      this.errorMessage = \"Please enter a valid amount.\";\n    }\n    else {\n      this.incomeAmount = this.incomeForm.get('incomeAmount').value;\n      this.incomeDate = this.incomeForm.get('incomeDate').value;\n\n      if (this.incomeDate == null) {\n        let today = new Date();\n        this.incomeDate = formatDate(today, 'yyyy-MM-dd', 'en-us');\n      }\n\n      let transaction = new Transaction();\n      transaction.id = null;\n      transaction.owner = this.currentUser;\n      transaction.amount = this.incomeAmount;\n      if (this.monthLapsed(new Date(this.incomeDate))) {\n        transaction.archived = 1;\n      }\n      else {\n        transaction.archived = 0;\n      }\n      transaction.date = this.incomeDate;\n      transaction.category = 'Income';\n      transaction.account = null;\n      this.accountService.addTransaction(transaction).subscribe(res => {\n        this.getAccount();\n        this.getIncome();\n      })\n    }\n  }\n\n  showTransactionDialog() {\n    this.dialog.open(this.addTransactionDialog, {\n      minWidth: '40%',\n      maxWidth: '100%'\n    })\n  }\n\n  showCategoryDialog() {\n    this.dialog.open(this.manageCategoryDialog, {\n      minWidth: '40%',\n      maxWidth: '100%'\n    })\n  }\n\n  addTransaction() {\n    let amount = this.transactionForm.get('transactionAmount');\n    let category = this.transactionForm.get('transactionCategory');\n    let date = this.transactionForm.get('transactionDate');\n\n    if (amount.invalid) {\n      this.errorMessage = \"Please enter a valid amount.\";\n    }\n    else if (category.invalid) {\n      this.errorMessage = \"Please select a category.\";\n    }\n    else {\n      this.errorMessage = undefined;\n\n      if (date.value == null) {\n        let today = new Date();\n        this.transactionDate = formatDate(today, 'yyyy-MM-dd', 'en-us');\n      }\n      else {\n        this.transactionDate = date.value;\n      }\n\n      let transaction = new Transaction();\n      transaction.id = null;\n      transaction.owner = this.currentUser;\n      transaction.amount = amount.value;\n      transaction.category = category.value.title;\n      transaction.account = this.accountName;\n      transaction.date = this.transactionDate;\n\n      let correctedDate = formatDate(transaction.date, 'MM-dd-yyyy', 'en-us');\n\n      if (this.monthLapsed(new Date(correctedDate))) {\n        transaction.archived = 1;\n      }\n      else {\n        transaction.archived = 0;\n      }\n\n      this.accountService.addTransaction(transaction).subscribe(resp => {\n        this.snackBar.open(\"Transaction added.\", \"OK\", {\"duration\" : 2000});\n        this.getAccount();\n        this.getBudget();\n        this.getSpent();\n      })\n    }\n  }\n\n  addCategory() {\n    if (this.categoryName == undefined) {\n      this.errorMessage = \"Please enter a category name.\";\n    }\n    else {\n      this.errorMessage = null;\n      this.budgetService.addCategory(this.currentUser, this.categoryName).subscribe(resp => {\n        this.snackBar.open(\"Category added!\", \"OK\", {\"duration\" : 2000});\n        this.getCategories();\n      })\n      this.categoryName = undefined;\n    }\n  }\n\n  deleteCategory() {\n    if (this.categoryToRemove != undefined) {\n      this.budgetService.deleteCategory(this.categoryToRemove.id).subscribe(resp => {\n        this.snackBar.open(\"Category removed.\", \"OK\", {\"duration\" : 2000});\n        this.getCategories();\n        this.categoryToRemove = undefined;\n      })\n    }\n  }\n\n  monthLapsed(date: Date) : boolean {\n    let lapsed = false;\n    let today = new Date();\n\n    if ((date.getMonth() + 1) < (today.getMonth() + 1) || date.getFullYear() < today.getFullYear()) {\n      lapsed = true;\n    }\n    return lapsed;\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"container-fluid\">\n    <div class=\"row justify-content-center\" style=\"margin-top:-25px;\">\n        <div class=\"col-md-3 order-1 order-md-1 mr-1 balanceInfo\">\n            <h1>Income</h1>\n            <h2>{{ amountEarned }}</h2>\n            <a [routerLink]=\"\" (click)=\"showIncomeDialog()\">Add Income</a>\n        </div>\n        <div class=\"col-md-3 order-1 order-md-1 mr-1 balanceInfo\">\n            <h1>Balance</h1>\n            <h2>{{ balance }}</h2>\n            <a href=\"account-activity\">View Activity</a>\n        </div>\n        <div class=\"col-md-3 order-1 order-md-1 mr-1 balanceInfo\">\n            <h1>Spent</h1>\n            <h2>{{ amountSpent}}</h2>\n            <a href=\"manage-budget\">Manage Budget</a>\n        </div>\n\n        <div class=\"col-md-10 order-1 order-md-1 mr-1 budgetProgress style\" style=\"margin-top:-25px;\">\n            <h1> {{ date | date: 'MMMM YYYY' }} Budget</h1>\n            <div class=\"d-flex justify-content-between\" style=\"margin-top: -50px;margin-bottom:25px;\">\n                    <button class=\"ml-auto\" (click)=\"showTransactionDialog()\">Add Transaction</button>\n            </div>\n            <div *ngFor=\"let budget of budgetItems\">\n                <div *ngFor=\"let transaction of transactions\">\n                    <div *ngIf=\"budget.category == transaction.category\" class=\"budgetContainer\">\n                        <div class=\"col-12\" style=\"padding:0\">\n                            {{budget.category}}\n                            <span style=\"float:right;font-size:18px;\" class=\"money\">{{ transaction.amount | currency }} of {{ budget.amount | currency}}</span>\n                        </div>\n                        <div class=\"budgetItem\">\n                            <div *ngIf=\"transaction.amount <= (budget.amount / 2)\" class=\"budgetStatus\" \n                            style=\"background-color: rgb(85, 194, 91);\" [ngStyle]=\"{'width' : transaction.amount / (budget.amount * 100) * 10000 + '%'}\">&nbsp;</div>\n                            <div *ngIf=\"transaction.amount >= (budget.amount * 0.60) && transaction.amount <= (budget.amount * 0.90)\" class=\"budgetStatus\" \n                            style=\"background-color: rgb(85, 194, 91);\" [ngStyle]=\"{'width' : transaction.amount / (budget.amount * 100) * 10000 + '%'}\">&nbsp;</div>\n                            <div *ngIf=\"transaction.amount >= (budget.amount * 0.90)\" class=\"budgetStatus\" \n                                style=\"background-color: #f3aaa1;\" [ngStyle]=\"{'width' : transaction.amount / (budget.amount * 100) * 10000 + '%'}\">&nbsp;</div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n    <div class=\"row\" style=\"margin-top:-40px;\">\n        <div class=\"col-md-1 order-1\">\n        </div>\n            <div class=\"col-md-3 mr-1 order-1 budgetProgress\">\n                <h1>Budget History</h1>\n                <select [(ngModel)]=\"selectedArchive\" name=\"selectedArcive\">\n                    <option *ngFor=\"let budget of budgetHistory\" [ngValue]=\"budget\">{{ budget | date: 'MMMM YYYY' }}</option>\n                </select>\n                <button (click)=\"viewSelectedArchive()\">View</button>\n            </div>\n            <div class=\"col-md-3 order-1\">\n            </div>\n    </div>\n</div>\n\n<!-- Add income dialog -->\n<ng-template #addIncomeDialog>\n    <mat-dialog-actions align=\"end\">\n        <i class=\"fa fa-window-close\" mat-button matDialogClose=\"yes\" style=\"font-size:32px;\"></i>\n    </mat-dialog-actions>\n    <h2 style=\"padding:.5em;margin-top:-70px;\">Add Income</h2>\n    <div class=\"container-fluid\">\n        <form [formGroup]=\"incomeForm\">\n            <div class=\"col-12\">\n                Amount:\n            </div>\n            <div class=\"col-12\">\n                <input type=\"text\" formControlName=\"incomeAmount\">\n            </div>\n            <div class=\"col-12\">\n                Date:\n            </div>\n            <div class=\"col-12\">\n                <input type=\"date\" formControlName=\"incomeDate\">\n            </div>\n            <span style=\"color:red;width:100%;padding:1em;\"> {{ errorMessage }} </span>\n            <div class=\"col-12 mt-2\">\n                <button style=\"float:right;\" (click)=\"addIncome()\" matDialogClose=\"yes\">Add</button>\n            </div>\n        </form>\n    </div>\n  </ng-template>\n\n  <!-- Add transaction dialog -->\n<ng-template #addTransactionDialog>\n    <mat-dialog-actions align=\"end\">\n        <i class=\"fa fa-window-close\" mat-button matDialogClose=\"yes\" style=\"font-size:32px;\"></i>\n    </mat-dialog-actions>\n    <h2 style=\"margin-top: -50px;\">Add Transaction</h2>\n    <div class=\"container-fluid justify-content-center\" style=\"margin-top:25px;\">\n        <form [formGroup]=\"transactionForm\">\n            <div class=\"col-12\">\n                Balance: <span style=\"float:right;\">{{ balance || currency }}</span>\n            </div>\n            <div class=\"col-12 mt-3\">\n                Amount:\n            </div>\n            <div class=\"col-12\">\n                <input type=\"text\" formControlName=\"transactionAmount\">\n            </div>\n            <div class=\"col-12 mt-3\">\n                Category:\n            </div>\n            <div class=\"col-12\">\n                <select [(ngModel)]=\"transactionCategory\" formControlName=\"transactionCategory\">\n                    <option *ngFor=\"let category of categories\" [ngValue]=\"category\"> {{ category.title }} </option>\n                </select>\n                <a [routerLink]=\"\" (click)=\"showCategoryDialog()\">Manage Categories</a>\n            </div>\n            <div class=\"col-12 mt-3\">\n                Date:\n            </div>\n            <div class=\"col-12\">\n                <input type=\"date\" formControlName=\"transactionDate\">\n            </div>\n            <span style=\"color:red;width:100%;padding:1em;\"> {{ errorMessage }} </span>\n            <div class=\"col-12 mt-2\">\n                <button style=\"float:right;\" (click)=\"addTransaction()\">Add</button>\n                <button style=\"float:right;margin-right:15px;\" matDialogClose=\"yes\">Close</button>\n            </div>\n        </form>\n    </div>\n  </ng-template>\n\n<!-- Manage Categories dialog -->\n<ng-template #manageCategoryDialog>\n    <mat-dialog-actions align=\"end\">\n        <i class=\"fa fa-window-close\" mat-button matDialogClose=\"yes\" style=\"font-size:32px;\"></i>\n    </mat-dialog-actions>\n    <h2 style=\"margin-top:-50px;\">Manage Categories</h2>\n    <div class=\"container-fluid justify-content-center\" style=\"margin-top:-25px;\">\n        <form>\n            <div class=\"col-12\" style=\"margin-top:75px;\">\n                Category Name:\n            </div>\n            <div class=\"col-12\">\n                <input type=\"text\" [(ngModel)]=\"categoryName\" name=\"categoryName\">\n                <span style=\"color:red;\"> {{ errorMessage }} </span>\n                <button style=\"float:right;margin-top:5px;\" (click)=\"addCategory()\">Add</button>\n            </div>\n            <div class=\"col-12\" style=\"margin-top:25px;\">\n                Categories:\n            </div>\n            <div class=\"col-12\">\n                <select name=\"categoryName\" [(ngModel)]=\"categoryToRemove\">\n                    <option *ngFor=\"let category of categories\" [ngValue]=\"category\" >{{ category.title }}</option>\n                </select>\n            </div>\n            <div class=\"col-12\">\n                <button style=\"float:right;\" (click)=\"deleteCategory()\" style=\"margin-top:5px;\">Remove</button>\n            </div>\n        </form>\n    </div>\n  </ng-template>","export class Category {\r\n    id: number;\r\n    owner: string;\r\n    title: string;\r\n}","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'penny-budget';\n}\n","<app-header></app-header>\r\n<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { LoginComponent } from './login/login.component';\nimport { HeaderComponent } from './header/header.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MaterialModule } from './shared/material/material.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { AuthInterceptor } from './shared/auth.interceptor';\nimport { AccountActivityComponent } from './account-activity/account-activity.component';\nimport { ManageBudgetComponent } from './manage-budget/manage-budget.component';\nimport { BudgetHistoryComponent } from './budget-history/budget-history.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    HeaderComponent,\n    DashboardComponent,\n    AccountActivityComponent,\n    ManageBudgetComponent,\n    BudgetHistoryComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    NgbModule,\n    BrowserAnimationsModule,\n    MaterialModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    FormsModule\n  ],\n  providers: [\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: AuthInterceptor,\n      multi: true\n    }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { AuthService } from '../services/auth.service';\n\n@Injectable()\nexport class AuthInterceptor implements HttpInterceptor {\n\n  constructor(private authService: AuthService) {}\n\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    const authToken = this.authService.getToken();\n    request = request.clone({\n      setHeaders: {\n        Authorization: `Bearer ${authToken}`\n      }\n    });\n    \n    return next.handle(request);\n  }\n}\n","export class Budget {\r\n    id: number;\r\n    owner: string;\r\n    category: string;\r\n    archived: number;\r\n    startDate: string;\r\n    endDate: string;\r\n    amount: number;\r\n}","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../services/auth.service';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor(private auth: AuthService) { }\n\n  ngOnInit(): void {\n  }\n\n  logout() {\n    this.auth.logout();\n  }\n\n  isLoggedIn() {\n    return this.auth.isLoggedIn;\n  }\n}\n","<div class=\"header\"><button *ngIf=\"isLoggedIn()\" (click)=\"logout()\">Logout</button></div>\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport { Transaction } from '../shared/models/transaction.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AccountService {\n\n  constructor(private httpClient: HttpClient) { }\n\n  getAccount(username: string) {\n    return this.httpClient.post(environment.apiEndpoint + '/getAccount', { \"username\" : username });\n  }\n\n  getAmountEarned(username: string, month: number, year: number) {\n    return this.httpClient.post(environment.apiEndpoint + '/getAmountEarned', { \"username\" : username, \"month\" : month, \"year\" : year});\n  }\n\n  getTotalSpentByCategory(username: string, month: number, year: number) {\n    return this.httpClient.post(environment.apiEndpoint + '/getTotalSpentByCategory', { \"username\" : username, \"month\" : month, \"year\" : year});\n  }\n\n  getTransactionHistory(username: string) {\n    return this.httpClient.post(environment.apiEndpoint + \"/getTransactionHistory\", { \"username\" : username });\n  }\n\n  addTransaction(transaction: Transaction) {\n    return this.httpClient.post(environment.apiEndpoint + '/addTransaction', { transaction });\n  }\n\n  deleteTransaction(transaction) {\n    const options = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n      }),\n      body: {\n        transaction: transaction\n      }\n    }\n    return this.httpClient.delete(environment.apiEndpoint + '/deleteTransaction', options);\n  }\n\n  archiveAccount(username: string) {\n    return this.httpClient.post(environment.apiEndpoint + '/archiveAccount', { \"username\" : username })\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AccountService } from '../services/account.service';\nimport { BudgetService } from '../services/budget.service';\n\n@Component({\n  selector: 'app-budget-history',\n  templateUrl: './budget-history.component.html',\n  styleUrls: ['./budget-history.component.css']\n})\nexport class BudgetHistoryComponent implements OnInit {\n\n  currentUser: string;\n  budgetArchive : any[] = [];\n  budgetDate: Date;\n  month: number;\n  year: number;\n\n  income: number;\n  totalBudget = 0;\n  totalSpent = 0;\n\n  remainingBalance: number;\n\n  constructor(private budgetService: BudgetService, private router: ActivatedRoute, private accountService: AccountService) {\n    this.currentUser = sessionStorage.getItem('username');\n    this.month = Number(this.router.snapshot.paramMap.get('month'));\n    this.year = Number(this.router.snapshot.paramMap.get('year'));\n    this.budgetDate = new Date(this.year, this.month, 0, 1);\n    this.getBudgetArchive();\n    this.getIncome();\n\n    this.budgetService.getRemainingBalance(this.currentUser, this.month, this.year).subscribe(value => {\n      this.remainingBalance = Number(value);\n    })\n  }\n\n  getBudgetArchive() {\n    this.budgetArchive = [];\n    this.budgetService.getBudgetArchive(this.currentUser, this.month, this.year).subscribe(value => {\n      console.log(value);\n      Object.keys(value).forEach((key) => {\n        this.budgetArchive.push(value[key]);\n        this.totalBudget += value[key].budgetAmount;\n        this.totalSpent += value[key].budgetSpent;\n      })\n    })\n  }\n\n  getIncome() {\n    this.accountService.getAmountEarned(this.currentUser, this.month, this.year).subscribe(value => {\n      this.income = Number(value);\n    })\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"container-fluid\">\n    <div class=\"row justify-content-center\">\n        <div class=\"col-9 m-5\">\n            <nav aria-label=\"breadcrumb\" style=\"margin-top: -25px;\">\n                <ol class=\"breadcrumb\" style=\"background-color: white;padding-top:1em;\">\n                  <li class=\"breadcrumb-item\"><a href=\"dashboard\">Dashboard</a></li>\n                  <li class=\"breadcrumb-item active\" aria-current=\"page\">Budget History</li>\n                </ol>\n              </nav>\n            <h1> {{ budgetDate | date: 'MMMM YYYY' }} Budget</h1>\n            <table class=\"budgetTable\" style=\"margin-top:10px;\">\n              <th>Category</th>\n              <th>Budget</th>\n              <th>Spent</th>\n              <tr *ngFor=\"let budget of budgetArchive\">\n                <td>{{ budget.category }}</td>\n                <td>{{ budget.budgetAmount | currency }}</td>\n                <td>\n                  <span style=\"color:green;\" *ngIf=\"budget.budgetSpent < budget.budgetAmount || budget.budgetSpent == budget.budgetAmount\">{{ budget.budgetSpent | currency }}</span>\n                  <span style=\"color:red;\" *ngIf=\"budget.budgetSpent > budget.budgetAmount\">{{ budget.budgetSpent | currency }}</span>\n                </td>\n              </tr>\n              <tr>\n                <th>Income</th>\n                <td>{{ income | currency }}</td>\n              </tr>\n              <tr>\n                <th>Budget</th>\n                <td>{{ totalBudget | currency }}</td>\n              </tr>\n              <tr>\n                <th>Spent</th>\n                <td>{{ totalSpent | currency }}</td>\n              </tr>\n              <tr>\n                <th>Remaining Balance</th>\n                <td>{{ remainingBalance | currency }}</td>\n              </tr>\n            </table>\n        </div>\n    </div>\n</div>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatNativeDateModule } from '@angular/material/core';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\n\n@NgModule({\n    declarations: [],\n    imports: [\n        CommonModule,\n        MatTableModule,\n        MatSortModule,\n        MatFormFieldModule,\n        MatInputModule,\n        MatDatepickerModule,\n        MatNativeDateModule,\n        MatIconModule,\n        MatSelectModule,\n        MatRadioModule,\n        MatButtonModule,\n        MatPaginatorModule,\n        MatDialogModule\n    ],\n    exports: [\n        CommonModule,\n        MatTableModule,\n        MatSortModule,\n        MatFormFieldModule,\n        MatInputModule,\n        MatDatepickerModule,\n        MatNativeDateModule,\n        MatIconModule,\n        MatSelectModule,\n        MatRadioModule,\n        MatButtonModule,\n        MatPaginatorModule,\n        MatDialogModule,\n        MatSnackBarModule\n    ]\n})\nexport class MaterialModule { }","import { HttpClient, HttpErrorResponse, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { BehaviorSubject } from 'rxjs';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\n\n// https://www.positronx.io/angular-jwt-user-authentication-tutorial/\n\nexport class AuthService {\n\n  constructor(private httpClient : HttpClient, private router: Router) { }\n\n  login(username: string, password: string) {\n    return this.httpClient.post<any>(environment.apiEndpoint + \"/login\", JSON.stringify({username, password}))\n      .subscribe((res: any) => {\n        localStorage.setItem('access_token', res.access_token);\n        sessionStorage.setItem('username', res.username);\n        this.router.navigate(['dashboard']);\n      })\n  }\n\n  logout() {\n    let token = localStorage.removeItem('access_token');\n    sessionStorage.removeItem('username');\n    if (token == null) {\n      this.router.navigate(['']);\n    }\n  }\n\n  get isLoggedIn(): boolean {\n    let authToken = localStorage.getItem('access_token');\n    return (authToken !== null) ? true : false;\n  }\n  \n  getToken() {\n    return localStorage.getItem('access_token');\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AccountActivityComponent } from './account-activity/account-activity.component';\nimport { BudgetHistoryComponent } from './budget-history/budget-history.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { LoginComponent } from './login/login.component';\nimport { ManageBudgetComponent } from './manage-budget/manage-budget.component';\nimport { AuthGuard } from './shared/auth.guard';\n\n// https://www.positronx.io/angular-jwt-user-authentication-tutorial/\n\nconst routes: Routes = [\n  { path: '', component: LoginComponent },\n  { path: 'dashboard', component: DashboardComponent, canActivate: [AuthGuard]},\n  { path: 'account-activity', component: AccountActivityComponent, canActivate: [AuthGuard]},\n  { path: 'manage-budget', component: ManageBudgetComponent, canActivate: [AuthGuard]},\n  { path: 'budget-history/:month/:year', component: BudgetHistoryComponent, canActivate: [AuthGuard]}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AccountService } from '../services/account.service';\nimport { AuthService } from '../services/auth.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  loginForm : FormGroup;\n  errorMessage : string;\n\n  constructor(private authService: AuthService, private router: Router, private accountService: AccountService) {\n    this.setLoginForm();\n   }\n\n  setLoginForm() {\n\n    this.loginForm = new FormGroup({\n      'email' : new FormControl(null, Validators.required),\n      'password' : new FormControl(null, Validators.required)\n    });\n\n  }\n\n  onSubmit() {\n\n    let emailField = this.loginForm.get('email');\n    let passwordField = this.loginForm.get('password');\n\n    if (emailField.errors != null || passwordField.errors != null) {\n      this.errorMessage = \"Incorrect email or password.\";\n    }\n    else {\n      this.authService.login(emailField.value, passwordField.value);\n      if (!this.authService.isLoggedIn) {\n        setTimeout(() => { this.errorMessage = \"Incorrect email or password.\"; }, 1000);\n      }\n    }\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"container\">\n    <div class=\"row justify-content-center\">\n        <div class=\"col-5 login\">\n            <span style=\"width:100%;text-align:center;\"><h1>Login</h1></span>\n            <form [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\">\n                <input type=\"text\" id=\"email\" placeholder=\"Email\" formControlName=\"email\">\n                <input type=\"text\" id=\"password\" placeholder=\"Password\" formControlName=\"password\">\n                <button type=\"submit\">Login</button>\n            </form>\n            <div *ngIf=\"errorMessage\" class=\"error\">\n                {{ errorMessage }}\n            </div>\n        </div>\n    </div>\n</div>","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}